{
  "id": "snapshot_1758935773175_jx80gsi00",
  "approvalId": "approval_1758935773148_wgw5gi82l",
  "approvalTitle": "图像生成工作流设计文档审批",
  "version": 1,
  "timestamp": "2025-09-27T01:16:13.175Z",
  "trigger": "initial",
  "status": "pending",
  "content": "# 图像生成工作流设计文档\r\n\r\n## 概述\r\n\r\n图像生成工作流是一个集成在 Social Media 页面中的 AI 驱动图像处理功能，提供文本到图像生成和图像编辑两种核心能力。通过与 n8n 后台的 webhook 集成，实现与 AI 图像处理服务的无缝对接。\r\n\r\n## 与指导文档的一致性\r\n\r\n### 技术标准 (tech.md)\r\n- 遵循现有的 React + TypeScript + Ant Design 技术栈\r\n- 使用现有的状态管理模式（Redux Toolkit）\r\n- 遵循现有的服务层架构模式\r\n- 采用现有的错误处理和消息提示机制\r\n\r\n### 项目结构 (structure.md)\r\n- 遵循现有的页面组件组织结构：pages/{PageName}/components/\r\n- 复用现有的服务层架构：services/\r\n- 遵循现有的类型定义组织：types/\r\n- 集成到现有的路由和导航结构\r\n\r\n## 代码复用分析\r\n\r\n### 现有组件复用\r\n- **WorkflowCard**: 复用现有的工作流卡片组件用于工作流选择\r\n- **WorkflowSidebar**: 复用现有的侧边栏布局结构\r\n- **N8NWebhookService**: 复用现有的 webhook 服务进行 API 调用\r\n- **消息提示系统**: 复用现有的 useMessage hook\r\n- **错误处理**: 复用现有的错误处理机制\r\n\r\n### 集成点\r\n- **Social Media 页面**: 集成到现有的 SocialMedia.tsx 主页面\r\n- **状态管理**: 集成到现有的 Redux store 结构\r\n- **路由系统**: 集成到现有的路由配置\r\n- **类型系统**: 扩展现有的类型定义\r\n\r\n## 架构\r\n\r\n### 模块化设计原则\r\n- **单一文件职责**: 每个组件和工具类都有明确的单一功能\r\n- **组件隔离**: 工作流卡片、面板组件、服务层相互独立\r\n- **服务层分离**: webhook 通信、业务逻辑、UI 展示分离\r\n- **工具模块化**: 图像处理、文件上传等功能模块化\r\n\r\n```mermaid\r\ngraph TD\r\n    A[SocialMedia Page] --> B[ImageGenerationWorkflow Card]\r\n    B --> C[ImageGenerationPanel]\r\n    C --> D[TextToImage Mode]\r\n    C --> E[ImageEdit Mode]\r\n    F[N8NWebhookService] --> G[Image Generation API]\r\n    F --> H[Image Edit API]\r\n    I[FileUploadService] --> J[Image Upload]\r\n```\r\n\r\n## 组件和接口\r\n\r\n### ImageGenerationWorkflowCard 组件\r\n- **目的**: 在 WorkflowSidebar 中显示图像生成工作流选项\r\n- **接口**:\r\n  - `onWorkflowSelect(workflow: Workflow): void`\r\n  - `onSettings(workflowId: string): void`\r\n- **依赖**: WorkflowCard, Workflow 类型\r\n- **复用**: 现有的 WorkflowCard 组件结构\r\n\r\n### ImageGenerationPanel 组件\r\n- **目的**: 提供图像生成的完整用户界面\r\n- **接口**:\r\n  - `workflow: Workflow` - 当前选择的工作流\r\n  - `loading?: boolean` - 加载状态\r\n  - `onImageGenerated?(imageUrl: string): void` - 图像生成回调\r\n- **依赖**: Ant Design 组件, FileUpload 组件\r\n- **复用**: 现有的面板布局模式\r\n\r\n### TextToImageTab 组件\r\n- **目的**: 处理文本到图像生成功能\r\n- **接口**:\r\n  - `onSubmit(prompt: string): Promise<void>`\r\n  - `loading?: boolean`\r\n  - `generatedImage?: string`\r\n- **依赖**: TextArea, Button, Image 组件\r\n- **复用**: 现有的表单组件模式\r\n\r\n### ImageEditTab 组件\r\n- **目的**: 处理图像编辑功能\r\n- **接口**:\r\n  - `onSubmit(imageFile: File, prompt: string): Promise<void>`\r\n  - `loading?: boolean`\r\n  - `editedImage?: string`\r\n- **依赖**: Upload 组件, TextArea, Image 组件\r\n- **复用**: 现有的文件上传组件\r\n\r\n## 数据模型\r\n\r\n### ImageGenerationRequest 模型\r\n```typescript\r\ninterface ImageGenerationRequest {\r\n  id: string;\r\n  type: 'text-to-image' | 'image-edit';\r\n  prompt: string;\r\n  imageFile?: File;\r\n  webhookUrl: string;\r\n  createdAt: string;\r\n  status: 'pending' | 'processing' | 'completed' | 'failed';\r\n}\r\n```\r\n\r\n### ImageGenerationResponse 模型\r\n```typescript\r\ninterface ImageGenerationResponse {\r\n  id: string;\r\n  requestId: string;\r\n  imageUrl: string;\r\n  prompt?: string;\r\n  processingTime?: number;\r\n  createdAt: string;\r\n  errorMessage?: string;\r\n}\r\n```\r\n\r\n### ImageGenerationSettings 模型\r\n```typescript\r\ninterface ImageGenerationSettings {\r\n  webhookUrl: string;\r\n  defaultPrompt?: string;\r\n  maxImageSize: number;\r\n  supportedFormats: string[];\r\n  timeout: number;\r\n}\r\n```\r\n\r\n## 错误处理\r\n\r\n### 错误场景\r\n1. **网络连接错误**:\r\n   - **处理**: 显示网络错误提示，提供重试按钮\r\n   - **用户影响**: 用户看到友好的错误消息，可以重试操作\r\n\r\n2. **文件上传错误**:\r\n   - **处理**: 验证文件大小和格式，显示具体错误原因\r\n   - **用户影响**: 用户看到文件要求和错误详情\r\n\r\n3. **图像生成超时**:\r\n   - **处理**: 显示进度提示，提供取消选项\r\n   - **用户影响**: 用户了解处理进度，可以选择等待或取消\r\n\r\n4. **服务不可用**:\r\n   - **处理**: 显示服务维护提示，提供备用方案\r\n   - **用户影响**: 用户了解当前状态，可以稍后重试\r\n\r\n## 测试策略\r\n\r\n### 单元测试\r\n- 测试各个组件的渲染和交互逻辑\r\n- 测试服务层的 webhook 调用功能\r\n- 测试文件上传和验证逻辑\r\n- 测试错误处理机制\r\n\r\n### 集成测试\r\n- 测试工作流卡片与主页面集成\r\n- 测试面板组件的状态管理\r\n- 测试与 n8n webhook 的完整流程\r\n- 测试错误情况下的用户体验\r\n\r\n### 端到端测试\r\n- 测试完整的图像生成流程\r\n- 测试文件上传和图像编辑流程\r\n- 测试在不同网络条件下的表现\r\n- 测试移动端响应式布局",
  "fileStats": {
    "size": 5437,
    "lines": 168,
    "lastModified": "2025-09-27T01:15:57.781Z"
  },
  "comments": []
}